Time complexity O(n), space complexity O(n).

class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        if len(prices) <= 1:
            return 0
        n = len(prices)
        dp = [0] * n
        min_p = prices[0]
        for i in xrange(1, n):
            if prices[i] < min_p:
                min_p = prices[i]
            else:
                dp[i] = prices[i] - min_p
        
        ans = max(dp)
        max_p = prices[-1]
        max_profit = 0
        for i in xrange(n - 1, -1, -1):
            max_p = max(max_p, prices[i])
            max_profit = max(max_profit, max_p - prices[i])
            ans = max(ans, dp[i] + max_profit)
        return ans
