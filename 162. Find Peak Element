Binary Search.
left, right = 0, len(nums) - 1, mid = (left + right) / 2
if nums[mid] < nums[mid + 1], then a peak must exist on the right of the mid
if nums[mid - 1] < nums[mid] > nums[mid + 1], return mid
if nums[mid] > nums[mid + 1], a peak must exist on the left of the mid.

The time complexity is O(logn)ã€‚
