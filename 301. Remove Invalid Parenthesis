class Solution(object):
    def removeInvalidParentheses(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        if not s:
            return [""]
        def helper(s):
            results = [s]
            count = {"(": 0, ")": 0}
            removed = 0
            for i, c in enumerate(s):
                if c == ")" and count["("] == count[")"]:
                    result = set()
                    while results:
                        ss = results.pop()
                        for j in xrange(i + 1 - removed):
                            if ss[j] == ")":
                                news = ss[:j] + ss[j + 1:]
                                result.add(news)
                    results = list(result)
                    removed += 1
                else:
                    if c in count:
                        count[c] += 1
            return results
        
        def reverse_p(ss):
            res = ""
        
            for c in ss[::-1]:
                if c == ")":
                    res += "("
                elif c == "(":
                    res += ")"
                else:
                    res += c
            return resx
        
        ans = helper(s)
        res = []
        for ss in ans:
            a = reverse_p(ss)
            res += helper(a)
        res = list(set(res))
        for i in xrange(len(res)):
            res[i] = reverse_p(res[i])
        return res
        
